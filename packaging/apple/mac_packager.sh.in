#!/bin/bash 

# Usage: 
# - mac_packager.sh plugin1 plugin2 ... pluginN
# or
# - mac_packager.sh path_to_plugins/*

# To build a stand-alone mac version of medInria, do the following:

# 1. build medInria
# 2. build medInria-plugins as well as your desired own plugins
# 3. chmod u+x mac_pacakger.sh
# 4. run mac_pacakger.sh with each argument being a script to package your plugins, e.g. : ./mac_packager.sh ${Plugins_Build_Dir}/mac_visages_plugins_packager.sh

# The bundle medInria.app will contain all plugins and will be standalone, packaged into MedINRIA.dmg in the install dir

cd @medInria_DIR@/bin

\rm -fr TmpInstall
mkdir TmpInstall
cp -r MUSIC.app TmpInstall

cd TmpInstall

@QT_BINARY_DIR@/macdeployqt MUSIC.app

#Run sub-packagers
injectDirs=''
for i in $*; do
	injectDirs="$injectDirs -inject-dir=$i/plugins"
	# Set some plugin dirs
	if [[ $i = *"carmenPlugins"* ]]; then
		carmenPluginsBuildDir="$i/plugins"
	fi
	if [[ $i = *"musicPlugins"* ]]; then
		musicPluginsBuildDir="$i/plugins"
	fi
done

@dtk_DIR@/bin/dtkDeploy MUSIC.app $injectDirs &>/dev/null

cd MUSIC.app/Contents

mkdir -p python_interpreter
cp -p @PROJECT_BINARY_DIR@/python_interpreter/music-py27.tar.gz python_interpreter/.


mkdir -p PlugIns/sqldrivers PlugIns/imageformats

cp -p @QT_PLUGINS_DIR@/sqldrivers/libqsqlite.dylib PlugIns/sqldrivers/libqsqlite.dylib
cp -p @QT_PLUGINS_DIR@/imageformats/libqsvg.dylib PlugIns/imageformats/libqsvg.dylib

for f in PlugIns/{sqldrivers/libqsqlite,imageformats/libqsvg}.dylib
do
	#Qt stuff (should hopefully be there already)
	for j in $( otool -L $f | sed "1d" | grep -E .framework | grep -i -E 'Qt|phonon' | cut -d " " -f 1 ); do
		#Depending on Qt SDK, paths may be relative or not
		#tmpVal=`echo $j | rev | cut -d "/" -f 1-4 | rev`
		if [ "`echo $j | grep executable_path`" == "" ]; then
			install_name_tool -change $j @executable_path/../Frameworks/$j $f
		fi
    done
done

# change library paths for qsqlite
install_name_tool -change @executable_path/../Frameworks//usr/local/Cellar/qt/4.8.7_3/lib/QtSql.framework/Versions/4/QtSql @executable_path/../Frameworks/QtSql.framework/Versions/4/QtSql PlugIns/sqldrivers/libqsqlite.dylib
install_name_tool -change @executable_path/../Frameworks//usr/local/Cellar/qt/4.8.7_3/lib/QtCore.framework/Versions/4/QtCore @executable_path/../Frameworks/QtCore.framework/Versions/4/QtCore PlugIns/sqldrivers/libqsqlite.dylib

# change library paths for plugins
for f in PlugIns/*.dylib
do
  install_name_tool -change $carmenPluginsBuildDir/libAAMeshInteractorPlugin.dylib @executable_path/../PlugIns/libAAMeshInteractorPlugin.dylib $f
  install_name_tool -change $carmenPluginsBuildDir/libAAAMeshUtilityPlugin.dylib @executable_path/../PlugIns/libAAAMeshUtilityPlugin.dylib $f
  install_name_tool -change $carmenPluginsBuildDir/libAAMFSSimulationPlugin.dylib @executable_path/../PlugIns/libAAMFSSimulationPlugin.dylib $f
  install_name_tool -change $carmenPluginsBuildDir/libAAAEPMapPlugin.dylib @executable_path/../PlugIns/libAAAEPMapPlugin.dylib $f
  install_name_tool -change $musicPluginsBuildDir/libAAAmedPipelinePlugin.dylib @executable_path/../PlugIns/libAAAmedPipelinePlugin.dylib $f
  install_name_tool -change $musicPluginsBuildDir/libmscPipelinesPlugin.dylib @executable_path/../PlugIns/libmscPipelinesPlugin.dylib $f
done


# Remove useless plugins
\rm -fr PlugIns/{accessible,bearer,codecs,graphicssystems}
#Run fancy packaging apple script

\cp -f @medInria_SOURCE_DIR@/utils/osx_packaging/BaseMedinriaPackage.sparseimage.gz @PROJECT_BINARY_DIR@/MedinriaPackage.sparseimage.gz
cd @PROJECT_BINARY_DIR@
gunzip -f MedinriaPackage.sparseimage.gz

hdiutil resize -size 1G MedinriaPackage.sparseimage
devName=`hdiutil attach -readwrite -noverify -noautoopen MedinriaPackage.sparseimage | egrep '^/dev/' | sed 1q | awk '{print $1}'`
diskutil rename "medInria base" "MUSIC"
\cp -rf @medInria_DIR@/bin/TmpInstall/MUSIC.app /Volumes/"MUSIC"/

sync
hdiutil detach $devName
hdiutil compact MedinriaPackage.sparseimage
hdiutil convert MedinriaPackage.sparseimage -format UDZO -imagekey zlib-level=9 -o "MUSIC-@medInria-superProject_VERSION@.dmg" 1>/dev/null 2>/dev/null
\rm -fr MedinriaPackage.sparseimage @medInria_DIR@/bin/TmpInstall
